steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/url-shortener:$COMMIT_SHA'
  - '-t'
  - 'gcr.io/$PROJECT_ID/url-shortener:latest'
  - '.'

# Push the container image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/url-shortener:$COMMIT_SHA'

- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/url-shortener:latest'

# Scan image for vulnerabilities
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - 'container'
  - 'images'
  - 'scan'
  - 'gcr.io/$PROJECT_ID/url-shortener:$COMMIT_SHA'
  - '--format=json'
  - '--quiet'

# Binary Authorization attestation
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud container binauthz attestations sign-and-create \
      --artifact-url=gcr.io/$PROJECT_ID/url-shortener:$COMMIT_SHA \
      --attestor=build-attestor \
      --attestor-project=$PROJECT_ID \
      --keyversion-project=$PROJECT_ID \
      --keyversion-location=us-central1 \
      --keyversion-keyring=url-shortener-keys \
      --keyversion-key=build-key \
      --keyversion=1

# Deploy to GKE
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - 'run'
  - '--filename=k8s/'
  - '--image=gcr.io/$PROJECT_ID/url-shortener:$COMMIT_SHA'
  - '--cluster=${_GKE_CLUSTER}'
  - '--location=${_GKE_ZONE}'
  - '--namespace=url-shortener'

# Run security tests
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    kubectl wait --for=condition=available --timeout=300s deployment/url-shortener -n url-shortener
    kubectl get pods -n url-shortener

substitutions:
  _GKE_CLUSTER: 'dev-url-shortener'  # Default cluster name
  _GKE_ZONE: 'us-central1'           # Default zone

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s'