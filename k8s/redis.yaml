apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: url-shortener
  labels:
    app: redis
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      version: v1
  template:
    metadata:
      labels:
        app: redis
        version: v1
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        command: ["redis-server"]
        args: ["--requirepass", "$(REDIS_PASSWORD)"]
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: url-shortener
  labels:
    app: redis
    version: v1
spec:
  selector:
    app: redis
    version: v1
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: url-shortener
type: Opaque
data:
  password: cmVkaXMxMjM=  # redis123 (base64 encoded)