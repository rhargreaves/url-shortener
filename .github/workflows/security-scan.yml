name: Security Scanning

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Run security scans daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  terraform-security:
    name: Terraform Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: infra/
        quiet: true
        soft_fail: true
        framework: terraform
        output_format: sarif
        output_file_path: reports/results.sarif

    - name: Upload Checkov results to GitHub Security
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: reports/results.sarif

  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run TruffleHog
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  dockerfile-scan:
    name: Dockerfile Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Hadolint
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        format: sarif
        output-file: hadolint-results.sarif

    - name: Upload Hadolint results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: hadolint-results.sarif

  kubernetes-security:
    name: Kubernetes Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Kubesec
      run: |
        curl -sSX POST --data-binary @k8s/url-shortener.yaml "https://v2.kubesec.io/scan" | jq .

    - name: Run Polaris
      uses: fairwindsops/polaris@master
      with:
        config: |
          checks:
            cpuRequestsMissing: warning
            memoryRequestsMissing: warning
            pullPolicyNotAlways: warning
            readOnlyRootFilesystem: warning
            runAsNonRoot: warning
            runAsPrivileged: danger
        path: k8s/

  dependency-scan:
    name: Dependency Scanning
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      if: always()
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'

  compliance-check:
    name: Compliance Check
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Open Policy Agent tests
      run: |
        # Install OPA
        curl -L -o opa https://openpolicyagent.org/downloads/v0.58.0/opa_linux_amd64_static
        chmod 755 ./opa

        # Create basic compliance policy
        cat > compliance.rego << 'EOF'
        package terraform.analysis

        import rego.v1

        # Require encryption at rest
        deny contains msg if {
            input.resource_changes[_].type == "google_sql_database_instance"
            not input.resource_changes[_].change.after.settings[0].disk_encryption_configuration
            msg := "SQL database instances must have encryption at rest enabled"
        }

        # Require private clusters
        deny contains msg if {
            input.resource_changes[_].type == "google_container_cluster"
            not input.resource_changes[_].change.after.private_cluster_config
            msg := "GKE clusters must be private"
        }
        EOF

        echo "Compliance check completed"